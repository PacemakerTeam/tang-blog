
    시큐리티 -> 로그인할 때 직접 로직을 짰었는데
    시큐리티가 지켜보다가 로그인 요청하면 시큐리티가 가로챕니다.
    그리고 username과 passowrd를 가로채기해서 살펴봅니다.

    이걸 통해서 로그인을 진행시킴. -> 이 로그인 진행이 완료가 되면?

    자기가 security session 을 가지고 있다. 시큐리티 전용 세선
    유저 정보를 여기에 등록한다. 시큐리티 세션
    우리는 필요할 때마다 여기서 가져와서 (DI) 사용하게 됨.
    왜냐하면 스프링이 시큐리티 세션도 컨테이너에서 관리하고 있기 때문이죠!

    user 오브젝트 넣을 수 없음.
    타입이 정해져있음. type:UserDetails

    userObject가 userDetails를 상속 받아서 사용하도록 하면 된다.

    시큐리티 세션안에 들어가야하는 타입이 userDetails여야 함!
    로그인 진행 대신해주는데 passowrd를 1234 이런 식으로 받으면 막음. 해쉬로 암호화가 되어야만 로그인이 진행되도록 설정되어있다.

    해쉬 : 고정길이의 난수로 변경

